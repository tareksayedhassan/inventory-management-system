<div dir="rtl" className="p-6 bg-gray-50 min-h-screen">
  <div className="flex justify-between items-center mb-8 max-w-6xl mx-auto">
    <h1 className="font-semibold text-3xl text-gray-800">إذن إضافة</h1>
    <Button variant="secondary" className="hover:bg-amber-100">
      <IoIosAddCircleOutline className="ml-2" />
      إذن إضافة جديد
    </Button>
  </div>

  <Card className="shadow-md border rounded-xl p-6 space-y-8 w-full max-w-6xl mx-auto bg-white">
    <p className="text-xl font-semibold text-gray-800">تعديل كارت الإضافة</p>
    <hr />

    <CardContent className="grid grid-cols-1 md:grid-cols-2 gap-6 text-sm text-gray-700">
      {/* Supplier */}
      <div>
        <label className="block mb-1 font-medium text-gray-700">اختر المورد</label>
        <select
          value={selectedSupplierId ?? ""}
          onChange={(e) => setSelectedSupplierId(Number(e.target.value))}
          className="w-full border rounded p-2 focus:outline-none focus:ring-2 focus:ring-green-500"
        >
          <option value="" disabled>اختر اسم المورد</option>
          {suppliers.map((supplier) => (
            <option key={supplier.id} value={supplier.id}>
              {supplier.name}
            </option>
          ))}
        </select>
      </div>

      {/* Treasury */}
      <div>
        <label className="block mb-1 font-medium text-gray-700">اختر الخزينة</label>
        <select
          value={selectedTreasuryId ?? ""}
          onChange={(e) => setSelectedTreasuryId(Number(e.target.value))}
          className="w-full border rounded p-2 focus:outline-none focus:ring-2 focus:ring-green-500"
        >
          <option value="" disabled>اختر اسم الخزينة</option>
          {treasuries.map((item) => (
            <option key={item.id} value={item.id}>
              {item.name}
            </option>
          ))}
        </select>
      </div>

      {/* Discount & Tax */}
      <div className="flex gap-4 items-center">
        <div className="flex flex-col">
          <label className="font-medium text-gray-700 mb-1">نسبة الخصم (%)</label>
          <input
            type="number"
            value={amount}
            onChange={(e) => setAmount(Number(e.target.value))}
            className="w-[100px] border rounded p-2"
          />
        </div>
        <div className="flex flex-col">
          <label className="font-medium text-gray-700 mb-1">نسبة الضريبة (%)</label>
          <input
            type="number"
            value={tax}
            onChange={(e) => setTax(Number(e.target.value))}
            className="w-[100px] border rounded p-2"
          />
        </div>
      </div>

      {/* Product Select */}
      <div>
        <label className="block mb-1 font-medium text-gray-700">اختر الصنف</label>
        <select
          value={selectedProductId ?? ""}
          onChange={(e) => setSelectedProductId(Number(e.target.value))}
          className="w-full border rounded p-2 focus:outline-none focus:ring-2 focus:ring-green-500"
        >
          <option value="" disabled>-- اختر الصنف --</option>
          {products.map((item) => (
            <option key={item.id} value={item.id}>
              {item.name}
            </option>
          ))}
        </select>
      </div>

      {/* Product Info */}
      {selectedProduct && (
        <>
          <div>
            <label className="block mb-1 font-medium text-gray-700">كود الصنف</label>
            <input
              type="text"
              value={selectedProduct.code}
              readOnly
              className="w-full border rounded p-2 bg-gray-100"
            />
          </div>
          <div>
            <label className="block mb-1 font-medium text-gray-700">اسم الصنف</label>
            <input
              type="text"
              value={selectedProduct.name}
              readOnly
              className="w-full border rounded p-2 bg-gray-100"
            />
          </div>
          <div>
            <label className="block mb-1 font-medium text-gray-700">الوحدة</label>
            <input
              type="text"
              value={selectedProduct.unit}
              readOnly
              className="w-full border rounded p-2 bg-gray-100"
            />
          </div>
          <div>
            <label className="block mb-1 font-medium text-gray-700">تكلفة الشراء</label>
            <input
              type="number"
              value={selectedProduct.buyPrice}
              readOnly
              className="w-full border rounded p-2 bg-gray-100"
            />
          </div>
        </>
      )}

      {/* Add Product Button */}
      <div className="col-span-1 md:col-span-2">
        <Button
          className="bg-green-600 hover:bg-green-700 text-white"
          onClick={() => {
            if (!selectedProduct) return toast.error("اختر صنف أولاً");

            const alreadyExists = selectedProducts.find(
              (p) => p.id === selectedProduct.id
            );
            if (alreadyExists) return toast.error("الصنف مضاف بالفعل");

            setSelectedProducts([
              ...selectedProducts,
              {
                ...selectedProduct,
                amount: 1,
                buyPrice: selectedProduct.buyPrice || 0,
              },
            ]);
          }}
        >
          إضافة الصنف
        </Button>
      </div>

      {/* Table */}
      <div className="col-span-1 md:col-span-2 overflow-x-auto">
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead className="min-w-[100px]">كود الصنف</TableHead>
              <TableHead>اسم الصنف</TableHead>
              <TableHead>الكمية</TableHead>
              <TableHead>تكلفة الشراء</TableHead>
              <TableHead>إجراءات</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {selectedProducts.map((product, index) => (
              <TableRow key={product.id}>
                <TableCell>{product.code}</TableCell>
                <TableCell>{product.name}</TableCell>
              <TableCell className="text-right">
                    <input
                      type="number"
                      value={product.buyPrice}
                      onChange={(e) => {
                        const newProducts = [...selectedProducts];
                        newProducts[index].buyPrice = Number(e.target.value);
                        setSelectedProducts(newProducts);
                      }}
                      className="w-[80px] border rounded p-1"
                    />
                  </TableCell>
                <TableCell>
                  <input
                    type="number"
                    value={product.buyPrice}
                    onChange={(e) => {
                      const newProducts = [...selectedProducts];
                      newProducts[index].buyPrice = Number(e.target.value);
                      setSelectedProducts(newProducts);
                    }}
                    className="w-[90px] border rounded p-1"
                  />
                </TableCell>
                <TableCell>
                  <Button
                    variant="destructive"
                    onClick={() => {
                      setSelectedProducts(
                        selectedProducts.filter((_, i) => i !== index)
                      );
                    }}
                  >
                    حذف
                  </Button>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </div>
    </CardContent>

    <CardFooter className="flex justify-end">
      <Button
        onClick={handleSubmit}
        className="bg-green-600 hover:bg-green-700 text-white"
      >
        حفظ الإضافة
      </Button>
    </CardFooter>
  </Card>
</div>
